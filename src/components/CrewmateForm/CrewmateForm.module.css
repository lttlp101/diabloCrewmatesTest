/* components/CrewmateForm/CrewmateForm.module.css */

.form {
	width: 100%;
	max-width: 700px;
	background-color: rgba(30, 30, 30, 0.7);
	border-radius: var(--border-radius);
	padding: 2rem;
	margin: 0 auto;
	box-shadow: var(--shadow-md);
	display: flex;
	flex-direction: column;
	gap: 1.5rem;
}

.formGroup {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	width: 100%;
	max-width: 400px; /* Limit the width of form groups */
	margin: 0 auto; /* Center the form group */
}

.label {
	font-weight: bold;
	color: #ffffff;
	font-size: var(--font-size-md);
}

.input,
.select,
.numberInput {
	padding: 0.75rem;
	border-radius: var(--border-radius);
	border: 1px solid #444444;
	background-color: #2a2a2a;
	color: #ffffff;
	font-size: var(--font-size-md);
	width: 100%; /* Take full width of the form group, which is now limited */
	transition: var(--transition-fast);
}

.input:focus,
.select:focus,
.numberInput:focus {
	outline: none;
	border-color: var(--accent-color);
	box-shadow: 0 0 0 2px rgba(139, 35, 3, 0.3);
}

.attributesContainer {
	background-color: rgba(20, 20, 20, 0.3);
	padding: 1.5rem;
	border-radius: var(--border-radius);
	margin-top: 1rem;
	width: 100%; /* Full width of the form */
}

.attributesContainer h3 {
	margin-bottom: 1rem;
	color: var(--accent-color);
	font-weight: bold;
	text-align: center;
}

.attributeGroup {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 0.75rem;
	max-width: 400px; /* Limit the width of attribute groups */
	margin-left: auto;
	margin-right: auto;
}

.attributeGroup .label {
	flex: 1;
}

.attributeGroup .numberInput {
	flex: 0 0 120px; /* Fixed width for number inputs */
	width: 120px;
}

.colorOptions {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
	gap: 1rem;
	margin-top: 0.5rem;
	max-width: 600px; /* Prevent the color grid from stretching too wide */
	margin-left: auto;
	margin-right: auto;
}

.colorLabel {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	cursor: pointer;
	color: #ffffff;
}

.colorInput {
	opacity: 0;
	position: absolute;
}

.colorRadio {
	width: 20px;
	height: 20px;
	border-radius: 50%;
	display: inline-block;
	position: relative;
	border: 2px solid #444;
	transition: var(--transition-fast);
}

.colorInput:checked + .colorRadio {
	border-color: white;
	box-shadow: 0 0 0 2px var(--accent-color);
}

/* Color options */
.red {
	background-color: var(--red);
}
.green {
	background-color: var(--green);
}
.blue {
	background-color: var(--blue);
}
.purple {
	background-color: var(--purple);
}
.yellow {
	background-color: var(--yellow);
}
.orange {
	background-color: var(--orange);
}
.pink {
	background-color: var(--pink);
}
.rainbow {
	background: var(--rainbow);
	animation: rainbow-spin 3s linear infinite;
}

.formActions {
	display: flex;
	gap: 1rem;
	margin-top: 1.5rem;
	justify-content: center;
}

.submitBtn,
.deleteBtn {
	padding: 0.75rem 1.5rem;
	border: none;
	border-radius: var(--border-radius);
	font-weight: bold;
	cursor: pointer;
	transition: var(--transition-normal);
	font-size: var(--font-size-md);
	min-width: 150px; /* Set a minimum width for buttons */
}

.submitBtn {
	background-color: var(--accent-color);
	color: white;
}

.deleteBtn {
	background-color: #5e0000;
	color: white;
}

.submitBtn:hover {
	background-color: #a82903;
	transform: translateY(-3px);
	box-shadow: var(--shadow-md);
}

.deleteBtn:hover {
	background-color: #8a0000;
	transform: translateY(-3px);
	box-shadow: var(--shadow-md);
}

.error {
	color: #ff4444;
	font-size: var(--font-size-sm);
	margin-top: 0.25rem;
	font-weight: bold;
}

@keyframes rainbow-spin {
	0% {
		filter: hue-rotate(0deg);
	}
	100% {
		filter: hue-rotate(360deg);
	}
}

/* Responsive adjustments */
@media (max-width: 768px) {
	.formGroup,
	.attributeGroup {
		max-width: 100%; /* Allow full width on mobile */
	}
}
